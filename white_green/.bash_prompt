function parseGitBranchAndAddBrackets {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ \[\1\]/'
}

function workingDirectoryCenteredWithinFullWindowWidthLine
{
    local txtpln_="\033[m"     # Plain
    local txtgrn_="\033[0;32m" # Green
    local git_branch=$(parseGitBranchAndAddBrackets)
    local thecwd_=${PWD/#$HOME/\~}$txtgrn_$git_branch$txtpln_
    local dirnam_=${thecwd_##*/}
    local dirlen_=$(( ${#dirnam_} ))
    local winwid_=$COLUMNS
    local maxwid_=$(( $winwid_ - 16 ))

    maxwid_=$(( (dirlen_ > maxwid_) ? dirlen_ : maxwid_ ))

    local offset=$(( ${#git_branch} - ${#thecwd_} - maxwid_ ))
    local space_

    if [ $offset -gt "0" ];
    then
        thecwd_=${thecwd_:$offset:$maxwid_}
        thecwd_=${thecwd_#*/}

        space_=$(( $winwid_ - ${#thecwd_} - ${#git_branch} - 12 ))

        local elpsis_="\xE2\x80\xA6"
        thecwd_=$elpsis_"/"$thecwd_
    else
        space_=$(( $winwid_ - ${#thecwd_} + 16 ))
    fi

    local leftln_=""
    local rigtln_=""

    if [ $space_ -gt "5" ];
    then
        local endash_="\xE2\x80\x93"
        local i=$(( $space_ / 2 - 2))

        while [ $i -gt "0" ]
        do
            leftln_=$leftln_$endash_
            rigtln_=$rigtln_$endash_
            let i--
        done

        if [ $(( $space_ % 2 )) -gt "0" ];
        then
            rigtln_=$rigtln_$endash_
        fi

        leftln_=$leftln_"[ "
        rigtln_=" ]"$rigtln_

    fi

    local format_

    if [ ${#1} -gt "0" ];
    then

        local txtpln_="\033[m"     # Plain
        local txtbld_="\033[1m"    # Bold
        local txtund_="\033[4m"    # Underline
        local txtbnk_="\033[5m"    # Blink
        local txtrvs_="\033[7m"    # Reverse

        local txtblk_="\033[0;30m" # Black
        local txtred_="\033[0;31m" # Red
        local txtgrn_="\033[0;32m" # Green
        local txtylw_="\033[0;33m" # Yellow
        local txtblu_="\033[0;34m" # Blue
        local txtpur_="\033[0;35m" # Purple
        local txtcyn_="\033[0;36m" # Cyan
        local txtwht_="\033[0;37m" # White

        local bldblk_="\033[1;30m" # Bold Black
        local bldred_="\033[1;31m" # Bold Red
        local bldgrn_="\033[1;32m" # Bold Green
        local bldylw_="\033[1;33m" # Bold Yellow
        local bldblu_="\033[1;34m" # Bold Blue
        local bldpur_="\033[1;35m" # Bold Purple
        local bldcyn_="\033[1;36m" # Bold Cyan
        local bldwht_="\033[1;37m" # Bold White

        local bakblk_="\033[40m"   # Background Black
        local bakred_="\033[41m"   # Background Red
        local bakgrn_="\033[42m"   # Background Green
        local bakylw_="\033[43m"   # Background Yellow
        local bakblu_="\033[44m"   # Background Blue
        local bakpur_="\033[45m"   # Background Purple
        local bakcyn_="\033[46m"   # Background Cyan
        local bakwht_="\033[47m"   # Background White

        eval format_=$1

    else
        format_=$leftln_$thecwd_$rigtln_
    fi

    echo -e $format_
}

function setCustomPrompt
{
    if [ ${#1} -gt "0" ];
    then

        local aspace_=" "                           # Space Character
        local newlin_="\n"                          # New Line
        local nprtst_="\["                          # Start of non-printing characters
        local nprtnd_="\]"                          # End of non-printing characters
        local ascesc_="\e"                          # ASCII Escape
        local ascbel_="\a"                          # ASCII Bell

        local escseq_=$nprtst_$ascesc_              # Escape Sequence
        local wintst_=$escseq_"]0;"                 # Start of window title
        local wintnd_=$ascbel_$nprtnd_              # End of window title

        local fulhst_="\H"                          # FQDN
        local usrhst_="\u@\h"                       # User @ Host
        local wrkdir_="\w"                          # Working Directory

        local raquot_; printf -v raquot_ "\xC2\xBB" # Right angled quotation mark

        local dlrpnd_="\$"                          # '$' or '#' if root
        local prompt_=${dlrpnd_/$/$raquot_}         # raquot or '#' if root

        local txtpln_=$escseq_"[m"$nprtnd_          # Plain
        local txtbld_=$escseq_"[1m"$nprtnd_         # Bold
        local txtund_=$escseq_"[4m"$nprtnd_         # Underline
        local txtbnk_=$escseq_"[5m"$nprtnd_         # Blink
        local txtrvs_=$escseq_"[7m"$nprtnd_         # Reverse

        local txtblk_=$escseq_"[0;30m"$nprtnd_      # Black
        local txtred_=$escseq_"[0;31m"$nprtnd_      # Red
        local txtgrn_=$escseq_"[0;32m"$nprtnd_      # Green
        local txtylw_=$escseq_"[0;33m"$nprtnd_      # Yellow
        local txtblu_=$escseq_"[0;34m"$nprtnd_      # Blue
        local txtpur_=$escseq_"[0;35m"$nprtnd_      # Purple
        local txtcyn_=$escseq_"[0;36m"$nprtnd_      # Cyan
        local txtwht_=$escseq_"[0;37m"$nprtnd_      # White

        local bldblk_=$escseq_"[1;30m"$nprtnd_      # Bold Black
        local bldred_=$escseq_"[1;31m"$nprtnd_      # Bold Red
        local bldgrn_=$escseq_"[1;32m"$nprtnd_      # Bold Green
        local bldylw_=$escseq_"[1;33m"$nprtnd_      # Bold Yellow
        local bldblu_=$escseq_"[1;34m"$nprtnd_      # Bold Blue
        local bldpur_=$escseq_"[1;35m"$nprtnd_      # Bold Purple
        local bldcyn_=$escseq_"[1;36m"$nprtnd_      # Bold Cyan
        local bldwht_=$escseq_"[1;37m"$nprtnd_      # Bold White

        local bakblk_=$escseq_"[40m"$nprtnd_        # Background Black
        local bakred_=$escseq_"[41m"$nprtnd_        # Background Red
        local bakgrn_=$escseq_"[42m"$nprtnd_        # Background Green
        local bakylw_=$escseq_"[43m"$nprtnd_        # Background Yellow
        local bakblu_=$escseq_"[44m"$nprtnd_        # Background Blue
        local bakpur_=$escseq_"[45m"$nprtnd_        # Background Purple
        local bakcyn_=$escseq_"[46m"$nprtnd_        # Background Cyan
        local bakwht_=$escseq_"[47m"$nprtnd_        # Background White

        eval PS1=$1
    fi
}
